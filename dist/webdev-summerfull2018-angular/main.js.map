{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/course-grid/course-grid.component.css","webpack:///./src/app/course-grid/course-grid.component.html","webpack:///./src/app/course-grid/course-grid.component.ts","webpack:///./src/app/course-navigator/course-navigator.component.css","webpack:///./src/app/course-navigator/course-navigator.component.html","webpack:///./src/app/course-navigator/course-navigator.component.ts","webpack:///./src/app/course-viewer/course-viewer.component.css","webpack:///./src/app/course-viewer/course-viewer.component.html","webpack:///./src/app/course-viewer/course-viewer.component.ts","webpack:///./src/app/hello-world/hello-world.component.css","webpack:///./src/app/hello-world/hello-world.component.html","webpack:///./src/app/hello-world/hello-world.component.ts","webpack:///./src/app/lesson-tabs/lesson-tabs.component.css","webpack:///./src/app/lesson-tabs/lesson-tabs.component.html","webpack:///./src/app/lesson-tabs/lesson-tabs.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/coruse.model.client.ts","webpack:///./src/app/module-list/module-list.component.css","webpack:///./src/app/module-list/module-list.component.html","webpack:///./src/app/module-list/module-list.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/quiz-list/quiz-list.component.css","webpack:///./src/app/quiz-list/quiz-list.component.html","webpack:///./src/app/quiz-list/quiz-list.component.ts","webpack:///./src/app/quiz-submissions/quiz-submissions.component.css","webpack:///./src/app/quiz-submissions/quiz-submissions.component.html","webpack:///./src/app/quiz-submissions/quiz-submissions.component.ts","webpack:///./src/app/quiz-taker/quiz-taker.component.css","webpack:///./src/app/quiz-taker/quiz-taker.component.html","webpack:///./src/app/quiz-taker/quiz-taker.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/section-list/section-list.component.css","webpack:///./src/app/section-list/section-list.component.html","webpack:///./src/app/section-list/section-list.component.ts","webpack:///./src/app/services/course-navigator.service.client.ts","webpack:///./src/app/services/course.service.client.ts","webpack:///./src/app/services/lesson.service.client.ts","webpack:///./src/app/services/module.service.client.ts","webpack:///./src/app/services/quiz.service.client.ts","webpack:///./src/app/services/section.service.client.ts","webpack:///./src/app/services/topic.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/services/widget.service.client.ts","webpack:///./src/app/topic-list/topic-list.component.css","webpack:///./src/app/topic-list/topic-list.component.html","webpack:///./src/app/topic-list/topic-list.component.ts","webpack:///./src/app/white-board/white-board.component.css","webpack:///./src/app/white-board/white-board.component.html","webpack:///./src/app/white-board/white-board.component.ts","webpack:///./src/app/widget-list/widget-list.component.css","webpack:///./src/app/widget-list/widget-list.component.html","webpack:///./src/app/widget-list/widget-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".test{\\n  color:red;\\n}\\n.courseContainer{\\n  margin:20px;\\n\\n}\\n.inlineStyle{\\n  display: inline-block;\\n}\\n.li:focus{\\n  background-color: yellow;\\n  outline: 1px;\\n}\\n.list-group-item-action1:target{\\n  color: red;\\n  text-decoration: none;\\n  background-color: red;\\n}\\n\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">White Board</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\" aria-controls=\\\"navbarNavDropdown\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavDropdown\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n\\n        <li class=\\\"nav-item\\\">\\n          <a   class=\\\"nav-link\\\"  routerLink=\\\"/profile\\\">Profile</a>\\n\\n        </li>\\n\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n\\n        </li>\\n\\n      </ul>\\n    </div>\\n  </nav>\\n</div>\\n\\n\\n<div *ngIf=\\\" null !== courses \\\" class=\\\"container-fluid p-4\\\" >\\n\\n  <h1 class=\\\"navbar-brand\\\" >\\n    Admin Page\\n  </h1>\\n\\n\\n  <table  class=\\\"form-control \\\" >\\n\\n\\n    <div class=\\\"container-fluid p-2\\\">\\n\\n    <input [(ngModel)]=\\\"sectionName\\\"\\n           placeholder=\\\"Section Name\\\"\\n           class=\\\"form-control p-3 \\\"\\n           >\\n\\n\\n    <input [(ngModel)]=\\\"seats\\\"\\n           placeholder=\\\"Seats available\\\"\\n           class=\\\"form-control p-3\\\">\\n\\n\\n    <button [hidden]=\\\"checkCourse\\\" (click)=\\\"createSection(sectionName, seats)\\\" class=\\\"btn btn-success mb-2\\\">\\n       Add Section\\n    </button>\\n\\n\\n    <button [hidden]=\\\"updateCheck\\\" (click)=\\\"updateSection(sectionName, seats)\\\" class=\\\"btn btn-success mb-2\\\">\\n      Update\\n    </button>\\n      </div>\\n\\n\\n\\n    <div *ngFor=\\\"let course of courses\\\" >\\n      <div class=\\\"container-fluid courseContainer\\\" >\\n\\n          <h5 class=\\\"card-title inlineStyle\\\">{{course.title}}</h5>\\n\\n           <button\\n                   (click)=\\\"addSection (course)\\\"\\n              class=\\\"float-right btn btn-primary inlineStyle\\\">+</button>\\n\\n      </div>\\n\\n      <ul class=\\\"list-group\\\">\\n        <li\\n          *ngFor=\\\"let section of this.map.get(course.id)\\\"\\n          (click)=\\\"selectSection(section)\\\"\\n          class=\\\"list-group-item list-group-item-action \\\"\\n          data-toggle=\\\"list\\\">\\n\\n          <div >\\n            <a     >{{section.name}}</a>\\n            Seat:  {{section.seats}}\\n\\n          <button (click)=\\\"delete (section)\\\"\\n                  class=\\\"float-right btn btn-primary\\\">delete</button>\\n          </div>\\n        </li>\\n      </ul>\\n\\n\\n\\n  </div>\\n  </table>\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Course} from \"../models/coruse.model.client\";\nimport {CourseServiceClient} from \"../services/course.service.client\";\nimport {SectionServiceClient} from \"../services/section.service.client\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient,\n              private Sectionservice: SectionServiceClient,\n              private router: Router,\n              private route: ActivatedRoute) {\n  }\n  sectionId = '';\n  courses = [];\n  sectionName = '';\n  seats = '';\n  courseId = '';\n  checkCourseId = '';\n  sections = [];\n  checkCourse = false;\n  updateCheck = true;\n  map = new Map();\n  ngOnInit() {\n    this.service.findAllCourses()\n      .then(courses => this.mapCourse(courses));\n  }\n\n  mapCourse(courses) {\n    this.courses = courses;\n    for (const course of courses) {\n      console.log('load map ' + JSON.stringify(course));\n       this\n        .Sectionservice\n        .findSectionsForCourse(course.id)\n        .then(sections => {\n          console.log('load sections ' + JSON.stringify(sections));\n          this.map.set(course.id , sections);\n        });\n  }\n    setTimeout( () => {\n      for (const course of courses) {\n        console.log('create map ' + JSON.stringify(this.map.get(course.id)));\n      }\n    }, 2000);\n  }\n\n  selectSection( section ) {\n    this.updateCheck = false ;\n    this.checkCourse = true ;\n    this.sectionId = section._id;\n    this.courseId = section.courseId;\n    this.sectionName = section.name;\n    this.seats = section.seats;\n  }\n  renderSections(courseId) {\n    if (this.checkCourseId === '') {\n      this.courseId = courseId;\n      this.checkCourseId = this.courseId;\n      console.log('2 course id ' + courseId);\n      return this\n        .Sectionservice\n        .findSectionsForCourse(courseId)\n      .then(sections => {\n        if ( sections !== null) {\n          this.sections = sections;\n          console.log(' section 1 ' + JSON.stringify(sections));\n        }\n      });\n    } else if (this.checkCourseId !== '' && this.checkCourseId !== courseId) {\n      this.courseId = courseId;\n      this.checkCourseId = '';\n      console.log('3 course id ' + courseId);\n      return this\n        .Sectionservice\n        .findSectionsForCourse(courseId)\n        .then(sections => {\n          if ( sections !== null) {\n            this.sections = sections;\n            console.log(' section 2 ' + JSON.stringify(sections));\n          }\n        });\n    }\n  }\n  loadSections(courseId) {\n    this.courseId = courseId;\n    this\n      .Sectionservice\n      .findSectionsForCourse(courseId)\n      .then(sections =>\n        this.map.set(courseId , sections));\n  }\n  delete(section) {\n    this\n      .Sectionservice\n      .deleteSection(section)\n      .then(() => {\n        this.loadSections(section.courseId);\n      });\n  }\n  addSection(course) {\n    this.updateCheck = true ;\n    this.checkCourse = false ;\n    this.courseId = course.id;\n    this.sectionName = course.title + '  section';\n    this.seats = '50' ;\n  }\n  updateSection(sectionName, seats) {\n    this\n      .Sectionservice\n      .updateSection(this.sectionId, sectionName, seats)\n      .then(() => {\n        this.loadSections(this.courseId);\n      });\n  }\n\n  createSection( sectionName, seats) {\n    this\n      .Sectionservice\n      .createSection(this.courseId, sectionName, seats)\n      .then(() => {\n        this.loadSections(this.courseId);\n      });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HelloWorldComponent } from './hello-world/hello-world.component';\nimport {FormsModule} from \"@angular/forms\";\nimport {CourseNavigatorServiceClient} from \"./services/course-navigator.service.client\";\nimport { CourseNavigatorComponent } from './course-navigator/course-navigator.component';\nimport { WhiteBoardComponent } from './white-board/white-board.component';\nimport { CourseGridComponent } from './course-grid/course-grid.component';\nimport {CourseServiceClient} from \"./services/course.service.client\";\nimport {routing} from \"./app.routing\";\nimport { CourseViewerComponent } from './course-viewer/course-viewer.component';\nimport { ModuleListComponent } from './module-list/module-list.component';\nimport {ModuleServiceClient} from \"./services/module.service.client\";\nimport { LessonTabsComponent } from './lesson-tabs/lesson-tabs.component';\nimport {LessonServiceClient} from \"./services/lesson.service.client\";\nimport { WidgetListComponent } from './widget-list/widget-list.component';\nimport {WidgetServiceClient} from \"./services/widget.service.client\";\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport {UserServiceClient} from \"./services/user.service.client\";\nimport { SectionListComponent } from './section-list/section-list.component';\nimport {SectionServiceClient} from \"./services/section.service.client\";\nimport { QuizListComponent } from './quiz-list/quiz-list.component';\nimport {QuizServiceClient} from \"./services/quiz.service.client\";\nimport { QuizTakerComponent } from './quiz-taker/quiz-taker.component';\nimport { QuizSubmissionsComponent } from './quiz-submissions/quiz-submissions.component';\nimport { TopicListComponent } from './topic-list/topic-list.component';\nimport {TopicServiceClient} from \"./services/topic.service.client\";\nimport { AdminComponent } from './admin/admin.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HelloWorldComponent,\n    CourseNavigatorComponent,\n    WhiteBoardComponent,\n    CourseGridComponent,\n    CourseViewerComponent,\n    ModuleListComponent,\n    LessonTabsComponent,\n    WidgetListComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    SectionListComponent,\n    QuizListComponent,\n    QuizTakerComponent,\n    QuizSubmissionsComponent,\n    TopicListComponent,\n    AdminComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing\n  ],\n  providers: [\n    CourseNavigatorServiceClient,\n    CourseServiceClient,\n    ModuleServiceClient,\n    LessonServiceClient,\n    TopicServiceClient,\n    WidgetServiceClient,\n    UserServiceClient,\n    SectionServiceClient,\n    QuizServiceClient\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { WhiteBoardComponent } from './white-board/white-board.component';\nimport { AdminComponent } from './admin/admin.component';\nimport {CourseViewerComponent} from './course-viewer/course-viewer.component';\nimport {ModuleListComponent} from './module-list/module-list.component';\nimport {LessonTabsComponent} from './lesson-tabs/lesson-tabs.component';\nimport {TopicListComponent} from './topic-list/topic-list.component';\nimport {WidgetListComponent} from './widget-list/widget-list.component';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {ProfileComponent} from './profile/profile.component';\nimport {SectionListComponent} from './section-list/section-list.component';\nimport {QuizListComponent} from './quiz-list/quiz-list.component';\nimport {QuizTakerComponent} from './quiz-taker/quiz-taker.component';\nimport {QuizSubmissionsComponent} from './quiz-submissions/quiz-submissions.component';\nconst appRoutes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\n  { path: 'home', component: WhiteBoardComponent},\n  { path: 'admin', component: AdminComponent},\n  { path: 'quizzes', component: QuizListComponent},\n  { path: 'quiz/:quizId', component: QuizTakerComponent},\n  { path: 'quiz/:quizId/submissions', component: QuizSubmissionsComponent},\n  { path: 'login', component: LoginComponent},\n  { path: 'register', component: RegisterComponent},\n  { path: 'profile', component: ProfileComponent},\n  { path: 'course/:courseId', component: CourseViewerComponent },\n  { path: 'course/:courseId/section', component: SectionListComponent },\n  { path: 'course/:courseId/module/:moduleId', component: CourseViewerComponent },\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId', component: CourseViewerComponent },\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId/topic/:topicId', component: CourseViewerComponent },\n\n  { path: '**', component: WhiteBoardComponent} // last\n];\nexport const routing = RouterModule.forRoot(appRoutes, {useHash: true});\n","module.exports = \".card {\\n  margin-bottom: 15px;\\n}\\n\"","module.exports = \"\\n<div class=\\\" p-4  \\\" >\\n<div class=\\\"row\\\">\\n  <div *ngFor=\\\"let course of courses\\\" class=\\\"col-lg-3\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <a\\n\\n            routerLink=\\\"/course/{{course.id}}\\\"\\n           class=\\\"btn btn-light form-control\\\">{{course.title}}</a>\\n\\n        <p class=\\\"card-text\\\">With supporting text below as a natural lead-in to additional content.</p>\\n\\n        <a routerLink=\\\"/course/{{course.id}}/section\\\"\\n           class=\\\"btn btn-warning\\\">Enroll</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CourseServiceClient} from \"../services/course.service.client\";\nimport {Course} from \"../models/coruse.model.client\";\n\n@Component({\n  selector: 'app-course-grid',\n  templateUrl: './course-grid.component.html',\n  styleUrls: ['./course-grid.component.css']\n})\nexport class CourseGridComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient) { }\n\n  courses: Course[] = [];\n  checkedCourseId = '';\n  enrolledAction(courseId) {\n    this.checkedCourseId = courseId + '&0';\n  }\n  ngOnInit() {\n    this.service.findAllCourses()\n      .then(courses => this.courses = courses);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid p-4\\\">\\n<h1>Course Navigator ({{courses.length}})</h1>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-3\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item active\\\">Courses</li>\\n        <li *ngFor=\\\"let course of courses\\\"\\n            (click)=\\\"selectCourse(course.id)\\\"\\n            class=\\\"list-group-item\\\">\\n          {{course.title}}\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-3\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item active\\\">Modules</li>\\n        <li *ngFor=\\\"let module of modules\\\" class=\\\"list-group-item\\\">\\n          {{module.title}}\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-3\\\">lessons</div>\\n    <div class=\\\"col-3\\\">widgets</div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CourseNavigatorServiceClient} from \"../services/course-navigator.service.client\";\n\n@Component({\n  selector: 'app-course-navigator',\n  templateUrl: './course-navigator.component.html',\n  styleUrls: ['./course-navigator.component.css']\n})\nexport class CourseNavigatorComponent implements OnInit {\n\n  constructor(private service: CourseNavigatorServiceClient) { }\n\n  courses = [];\n  modules = [];\n\n  selectCourse(courseId) {\n    this.service.findAllModulesForCourses(courseId)\n      .then(modules => this.modules = modules);\n  }\n\n  ngOnInit() {\n    this.service.findAllCourses()\n      .then(courses => this.courses = courses);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\" null !== course \\\" class=\\\"container-fluid \\\">\\n  <div class=\\\"container-fluid\\\">\\n    <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">White Board</a>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\" aria-controls=\\\"navbarNavDropdown\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavDropdown\\\">\\n        <ul class=\\\"navbar-nav\\\">\\n          <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a>\\n          </li>\\n          <li class=\\\"nav-item \\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">Profile</a>\\n\\n          </li>\\n        </ul>\\n      </div>\\n    </nav>\\n  </div>\\n  <div class=\\\"p-4\\\">\\n  <h2>{{course.title}}</h2>\\n  <app-module-list></app-module-list>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router } from \"@angular/router\";\nimport {CourseServiceClient} from \"../services/course.service.client\";\nimport {Course} from \"../models/coruse.model.client\";\n\n@Component({\n  selector: 'app-course-viewer',\n  templateUrl: './course-viewer.component.html',\n  styleUrls: ['./course-viewer.component.css']\n})\nexport class CourseViewerComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient,\n              private route: ActivatedRoute,\n              private router: Router,\n  ) {\n  }\n  course: Course = new Course();\n  loadCourse(courseId) {\n    this.service.findCourseById(courseId)\n      .then(course => this.course = course);\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => this.loadCourse(params['courseId']));\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1>{{message}}</h1>\\n\\n<h2>Courses ({{courses.length}})</h2>\\n\\n<ul>\\n  <li *ngFor=\\\"let course of courses\\\" class=\\\"list-item\\\" style=\\\"\\\">\\n    {{course.title}}\\n    <button (click)=\\\"deleteCourse(course.id)\\\">Delete</button>\\n  </li>\\n</ul>\\n<input [(ngModel)]=\\\"courseTitle\\\"/>\\n<button (click)=\\\"addCourse(courseTitle)\\\">\\n  Add Course\\n</button>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-hello-world',\n  templateUrl: './hello-world.component.html',\n  styleUrls: ['./hello-world.component.css']\n})\nexport class HelloWorldComponent implements OnInit {\n\n  courseTitle;\n  message = 'Hello from Hello World Component!';\n  courses = [\n    {title: 'CS5200', id: 123},\n    {title: 'CS5610', id: 234},\n    {title: 'CS3200', id: 345},\n    {title: 'CS4550', id: 456}\n  ];\n  deleteCourse(courseId) {\n    this.courses = this.courses.filter(course =>\n      course.id !== courseId\n    );\n  }\n\n  addCourse(title) {\n    this.courses.push({\n      title: title,\n      id: title\n    });\n    this.courseTitle = '';\n  }\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".wbdv.active {\\n  background-color: #f8f9fa;\\n  border-color: #f8f9fa;\\n}\\n\\n.wbdv a {\\n  color: black;\\n}\\n\\n.wbdv.active a {\\n  color: white;\\n}\\n\"","module.exports = \"<div *ngIf=\\\" null !== lessons \\\">\\n<ul class=\\\"nav nav-tabs\\\">\\n  <li *ngFor=\\\"let lesson of lessons\\\"\\n      class=\\\"nav-item wbdv  \\\">\\n\\n    <a class=\\\"nav-link\\\"\\n       [ngClass]=\\\"{'active': lesson.id == lessonId}\\\"\\n       routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lesson.id}}\\\">\\n      {{lesson.title}}\\n    </a>\\n  </li>\\n</ul>\\n\\n\\n  <app-topic-list></app-topic-list>\\n\\n\\n\\n</div>\\n\"","import { Component, OnInit, AfterContentInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {LessonServiceClient} from \"../services/lesson.service.client\";\n\n@Component({\n  selector: 'app-lesson-tabs',\n  templateUrl: './lesson-tabs.component.html',\n  styleUrls: ['./lesson-tabs.component.css']\n})\nexport class LessonTabsComponent implements OnInit, AfterContentInit {\n\n  constructor(private service: LessonServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  lessonId;\n  lessons = null;\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.lessonId = params['lessonId'];\n\n    console.log('course 1121 id ' + this.courseId);\n    console.log('module 1121 id ' + this.moduleId);\n    if (this.moduleId !== undefined) {\n      this.loadLessons(this.courseId, this.moduleId);\n    }\n\n  }\n\n  loadLessons(courseId, moduleId) {\n    // this.moduleId = moduleId;\n    console.log('course 321 id ' + courseId);\n    console.log('module 321 id ' + moduleId);\n    if ( courseId !== undefined || moduleId !==  undefined) {\n      this.service.findLessonsForModule(courseId, moduleId)\n        .then(lessons => this.lessons = lessons);\n    }\n  }\n\n  ngOnInit() {\n  }\n  ngAfterContentInit() {\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">White Board</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\" aria-controls=\\\"navbarNavDropdown\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavDropdown\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n</div>\\n\\n\\n<div class=\\\"container-fluid p-4\\\">\\n  <h1 class=\\\"navbar-brand\\\">Login</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <button (click)=\\\"login(username, password)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Login\\n  </button>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Route, Router} from \"@angular/router\";\nimport {UserServiceClient} from \"../services/user.service.client\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username;\n  password;\n  login(username, password) {\n    console.log([username, password]);\n    this.service\n      .login(username, password)\n      .then((code) => {\n        this.checkUser(code);\n      });\n  }\n\n  checkUser(user) {\n    console.log( ' back information ' + user.status);\n    if ( user.status === 404) {\n      alert('username and password is not match ') ;\n    } else {\n      if ( user.status === 201) {\n        alert('admin mode ! ') ;\n      }\n      this.router.navigate(['profile']);\n    }\n  }\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Course {\n  id: number;\n  title: string;\n}\n","module.exports = \".wbdv.active {\\n  background-color: #f8f9fa;\\n  border-color: #f8f9fa;\\n}\\n\\n.wbdv a {\\n  color: black;\\n}\\n\\n.wbdv.active a {\\n  color: white;\\n}\\n\"","module.exports = \"\\n<div *ngIf=\\\" null !== modules \\\" class=\\\"row\\\">\\n\\n  <div class=\\\"col-3\\\">\\n    <ul class=\\\"list-group rounded\\\">\\n      <li class=\\\"list-group-item   active btn btn-light\\\">Modules</li>\\n      <li [ngClass]=\\\"{'active': module.id == moduleId}\\\" *ngFor=\\\"let module of modules\\\"\\n          class=\\\"list-group-item wbdv active btn btn-outline-success\\\">\\n\\n        <a    routerLink=\\\"/course/{{courseId}}/module/{{module.id}}\\\">\\n          {{module.title}}</a>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <app-lesson-tabs></app-lesson-tabs>\\n  </div>\\n</div>\\n\"","import {Component, OnInit, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {ActivatedRoute} from '@angular/router';\nimport {ModuleServiceClient} from '../services/module.service.client';\n\n@Component({\n  selector: 'app-module-list',\n  templateUrl: './module-list.component.html',\n  styleUrls: ['./module-list.component.css']\n})\nexport class ModuleListComponent implements OnInit, OnChanges {\n\n  constructor(private service: ModuleServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n    this.loadModules(this.courseId);\n  }\n\n  courseId;\n  moduleId;\n  modules = null;\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    console.log('course id ' + this.courseId);\n    console.log('moduleId id 22 ' + this.moduleId);\n  }\n\n  loadModules(courseId) {\n    console.log('course id 22 ' + courseId);\n    // this.courseId = courseId;\n    if ( courseId !== undefined )\n    this.service.findModulesForCourse(courseId)\n      .then(modules => {\n        this.modules = modules;\n      });\n  }\n\n\n  ngOnInit() {\n    console.log('oninit moudles id 22 ' + JSON.stringify(this.modules));\n  }\n  ngOnChanges(changes: SimpleChanges) {\n  }\n\n\n\n}\n","module.exports = \"\"","module.exports = \"\\n\\n<div class=\\\"container-fluid\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">White Board</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\" aria-controls=\\\"navbarNavDropdown\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavDropdown\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n\\n        <li class=\\\"nav-item\\\">\\n          <a   class=\\\"nav-link\\\" [hidden]=\\\"adminMode\\\" routerLink=\\\"/admin\\\">Admin</a>\\n\\n        </li>\\n\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n\\n        </li>\\n\\n      </ul>\\n    </div>\\n  </nav>\\n</div>\\n\\n\\n<div *ngIf=\\\" null !== sections \\\" class=\\\"container-fluid p-4\\\">\\n  <h1>Profile</h1>\\n\\n  <input [(ngModel)]=\\\"user.username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"user.firstName\\\"\\n         placeholder=\\\"first name\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"user.lastName\\\"\\n         placeholder=\\\"lastName\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"user.email\\\"\\n         placeholder=\\\"email\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"user.phoneNumber\\\"\\n         placeholder=\\\"phone number\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"user.address\\\"\\n         placeholder=\\\"address\\\"\\n         class=\\\"form-control\\\"/>\\n  <button (click)=\\\"update()\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Update\\n  </button>\\n\\n  <h2>Sections ({{sections.length}})</h2>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let enrollment of sections\\\" class=\\\"list-group-item\\\">\\n      <a routerLink=\\\"/course/{{enrollment.section.courseId}}\\\"  >{{enrollment.section.name}}</a>\\n      ({{enrollment.section.seats}})\\n      <button (click)=\\\"unenroll (enrollment)\\\"\\n              class=\\\"float-right btn btn-primary\\\">delete</button>\\n    </li>\\n\\n\\n  </ul>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {User} from \"../models/user.model.client\";\nimport {UserServiceClient} from \"../services/user.service.client\";\nimport {Router} from \"@angular/router\";\nimport {SectionServiceClient} from \"../services/section.service.client\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n              private sectionService: SectionServiceClient,\n              private router: Router) { }\n\n  user = {};\n  username;\n  password;\n  firstName;\n  lastName;\n  email;\n  sections = [];\n  adminMode = true;\n  checkedCourseId = '';\n\n  update() {\n    this.service\n      .update(this.user)\n      .then((user) =>\n          this.updateUser(user),\n      );\n  }\n  checkAdmin(user) {\n     if ( user.username === 'admin' ) {\n       this.adminMode = false ;\n     } else {\n       this.adminMode = true ;\n     }\n    this.user =  user;\n  }\n  enrolledAction(courseId) {\n    this.checkedCourseId = courseId + '&1';\n  }\n  updateUser(user) {\n    if ( user.status !== 404)  {\n      this.checkAdmin(user);\n        setTimeout( alert('update success'), 1000);\n      console.log( ' user'  + JSON.stringify(user));\n    } else {\n      alert('not success!');\n    }\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n  unenroll(enroll) {\n    console.log('in front check enroll find ' + JSON.stringify(enroll));\n    this\n      .sectionService\n      .unenrollSection(enroll)\n      .then(() => {\n        this.sectionService\n          .findSectionsForStudent()\n          .then((sections) => {\n            console.log('in front check section find ' + JSON.stringify(sections));\n            this.sections = sections; });\n      });\n  }\n\n  ngOnInit() {\n    console.log( 'user ' + JSON.stringify(this.user));\n      this.service\n      .profile()\n      .then((user) => {\n        console.log( 'user111 ' + JSON.stringify(user));\n        if ( user.status !== undefined && user.status === 404 ) {\n          alert('you are not login! ');\n          this.router.navigate(['login']);\n        }\n        this.checkAdmin(user);\n      });\n\n    this.sectionService\n      .findSectionsForStudent()\n      .then(sections => {\n        this.sections = sections;\n      });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h2>Quizzes</h2>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let quiz of quizzes\\\" class=\\\"list-group-item\\\">\\n      {{quiz.name}}\\n\\n      <a routerLink=\\\"/quiz/{{quiz._id}}/submissions\\\" class=\\\"btn btn-info float-right\\\">Submissions</a>\\n      <a routerLink=\\\"/quiz/{{quiz._id}}\\\" class=\\\"btn btn-success float-right\\\">Take</a>\\n    </li>\\n  </ul>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {QuizServiceClient} from \"../services/quiz.service.client\";\n\n@Component({\n  selector: 'app-quiz-list',\n  templateUrl: './quiz-list.component.html',\n  styleUrls: ['./quiz-list.component.css']\n})\nexport class QuizListComponent implements OnInit {\n\n  constructor(private service: QuizServiceClient) { }\n\n  quizzes = [];\n  ngOnInit() {\n    this.service.findAllQuizzes()\n      .then(quizzes => this.quizzes = quizzes);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h2>Submissions</h2>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let submission of submissions\\\" class=\\\"list-group-item\\\">\\n      {{submission.username}}\\n    </li>\\n  </ul>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {QuizServiceClient} from \"../services/quiz.service.client\";\n\n@Component({\n  selector: 'app-quiz-submissions',\n  templateUrl: './quiz-submissions.component.html',\n  styleUrls: ['./quiz-submissions.component.css']\n})\nexport class QuizSubmissionsComponent implements OnInit {\n\n  constructor(private service: QuizServiceClient,\n              private aRoute: ActivatedRoute) {\n    this.aRoute.params.subscribe(params =>\n      this.loadSubmissions(params['quizId']));\n  }\n\n  quizId = '';\n  submissions = [];\n  loadSubmissions(quizId) {\n    this.quizId = quizId;\n    this.service.loadSubmissions(this.quizId)\n      .then(submissions => this.submissions = submissions);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h2>Quiz: {{quizId}}</h2>\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let question of quiz.questions\\\" class=\\\"list-group-item\\\">\\n      <div [ngSwitch]=\\\"question.type\\\">\\n        <div *ngSwitchCase=\\\"'essay'\\\">\\n          <h1>Essay Question</h1>\\n          <textarea [(ngModel)]=\\\"submission[question._id]\\\" class=\\\"form-control\\\"></textarea>\\n        </div>\\n      </div>\\n    </li>\\n  </ul>\\n  <button (click)=\\\"submit(submission)\\\">Submit</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Route} from \"@angular/router\";\nimport {QuizServiceClient} from \"../services/quiz.service.client\";\n\n@Component({\n  selector: 'app-quiz-taker',\n  templateUrl: './quiz-taker.component.html',\n  styleUrls: ['./quiz-taker.component.css']\n})\nexport class QuizTakerComponent implements OnInit {\n\n  constructor(private service: QuizServiceClient,\n              private activatedRoute: ActivatedRoute) {\n    this.activatedRoute\n      .params\n      .subscribe(params => this.loadQuiz(params['quizId']));\n  }\n\n  quizId = '';\n  quiz = {};\n  submission = {};\n  loadQuiz(quizId) {\n    this.quizId = quizId;\n    this.service\n      .findQuizById(quizId)\n      .then(quiz => this.quiz = quiz);\n  }\n  submit(submission) {\n    console.log(this.submission);\n    this.service\n      .submitQuiz(this.submission, this.quizId);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">White Board</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\" aria-controls=\\\"navbarNavDropdown\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavDropdown\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n</div>\\n\\n<div class=\\\"container-fluid p-4\\\">\\n  <h1 class=\\\"navbar-brand\\\">Register</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"password2\\\"\\n         placeholder=\\\"verify password\\\"\\n         class=\\\"form-control\\\"/>\\n  <button (click)=\\\"register(username, password, password2)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Register\\n  </button>\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {UserServiceClient} from \"../services/user.service.client\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n\n  username;\n  password;\n  password2;\n  register(username, password, password2) {\n    if ( password !== password2 ) {\n      alert('password is not match');\n    } else {\n        this.service\n        .createUser(username, password)\n        .then(res =>\n          this.checkUser(res));\n    }\n  }\n\n  checkUser(user) {\n    console.log( ' back information ' + user.status);\n    if ( user.status === 401) {\n      alert('user already register') ;\n    } else {\n      this.router.navigate(['profile']);\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">White Board</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\" aria-controls=\\\"navbarNavDropdown\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavDropdown\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a>\\n        </li>\\n        <li class=\\\"nav-item \\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">Profile</a>\\n\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n</div>\\n\\n\\n<div class=\\\"container-fluid p-4\\\">\\n  <h1 class=\\\"navbar-brand\\\">Sections for course: {{course.title}}</h1>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item\\\">\\n      {{section.name}}  seat: {{section.seats}}\\n      <button  *ngIf= \\\"section.seats!==0\\\" (click)=\\\"enroll(section)\\\"\\n              class=\\\"float-right btn btn-primary\\\">Enroll</button>\\n    </li>\\n  </ul>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {SectionServiceClient} from \"../services/section.service.client\";\nimport {CourseServiceClient} from \"../services/course.service.client\";\n\n@Component({\n  selector: 'app-section-list',\n  templateUrl: './section-list.component.html',\n  styleUrls: ['./section-list.component.css']\n})\nexport class SectionListComponent implements OnInit {\n\n  constructor(private service: SectionServiceClient,\n              private courseServer: CourseServiceClient,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe\n    (params => this.loadSections(params['courseId']));\n  }\n\n  sectionName = '';\n  seats = '';\n  courseId = '';\n  sections = [];\n  course = '';\n  loadSections(courseId) {\n    this.courseId = courseId;\n    this.\n      courseServer\n      .findCourseById(courseId)\n      .then(course => this.course = course);\n    this\n      .service\n      .findSectionsForCourse(courseId)\n      .then(sections => this.sections = sections\n      );\n  }\n\n  createSection(sectionName, seats) {\n    this\n      .service\n      .createSection(this.courseId, sectionName, seats)\n      .then(() => {\n        this.loadSections(this.courseId);\n      });\n  }\n\n  enroll(section) {\n    this.service\n      .enrollStudentInSection(section._id)\n      .then((back) => {\n        this.checkEnroll(back);\n      });\n  }\n\n  checkEnroll(user) {\n    console.log( ' back information ' + user.status);\n    if ( user.status === 401) {\n      alert('user already enrolled this section') ;\n    } else {\n      this.router.navigate(['profile']);\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export class CourseNavigatorServiceClient {\n  // url = 'http://localhost:8080';\n  url = 'https://webdev-summerfull-2018.herokuapp.com';\n  findAllCourses() {\n    return fetch(this.url + '/api/course')\n      .then(response => response.json());\n  }\n  findAllModulesForCourses(courseId) {\n    return fetch(this.url + '/api/course/' + courseId + '/module')\n      .then(response => response.json());\n  }\n}\n","export class CourseServiceClient {\n  // url = 'http://localhost:8080';\n  url = 'https://webdev-summerfull-2018.herokuapp.com';\n  COURSE_URL = this.url + '/api/course';\n  findAllCourses() {\n    return fetch(this.COURSE_URL)\n      .then(response => response.json());\n  }\n  findCourseById(courseId) {\n    return fetch(this.COURSE_URL + '/' + courseId)\n      .then(response => response.json());\n  }\n}\n","export class LessonServiceClient {\n  // url = 'http://localhost:8080';\n  url = 'https://webdev-summerfull-2018.herokuapp.com';\n  findLessonsForModule(courseId, moduleId) {\n    return fetch(this.url + '/api/course/' + courseId + '/module/' + moduleId + '/lesson')\n      .then(response => response.json());\n  }\n}\n","export class ModuleServiceClient {\n  // url = 'http://localhost:8080';\n  url = 'https://webdev-summerfull-2018.herokuapp.com';\n  MODULE_URL = this.url + '/api/course/COURSE_ID/module';\n  findModulesForCourse(courseId) {\n    return fetch(this.MODULE_URL.replace('COURSE_ID', courseId))\n      .then(response => response.json());\n  }\n}\n","export class QuizServiceClient {\n\n  loadSubmissions(quizId) {\n    return fetch('http://localhost:4000/api/quiz/' + quizId + '/submissions')\n      .then(response => response.json());\n  }\n\n  submitQuiz(quiz, quizId) {\n    return fetch('http://localhost:4000/api/quiz/' + quizId,{\n      method: 'post',\n      body: JSON.stringify(quiz),\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n      .then(response => response.json());\n  }\n  findQuizById(quizId) {\n    return fetch('http://localhost:4000/api/quiz/' + quizId)\n      .then(response => response.json());\n  }\n  findAllQuizzes() {\n    return fetch('http://localhost:4000/api/quiz')\n      .then(response => response.json());\n  }\n}\n","export class SectionServiceClient {\n   // URL = 'http://localhost:4000';\n   URL = 'https://web-summer2018-nodejs-kenzhu.herokuapp.com' ;\n   SECTION_URL = this.URL + '/api/course/COURSEID/section';\n   Find = this.URL + '/api/student/section';\n   delete = this.URL + '/api/section/sectionId';\n   update = this.URL + '/api/section/sectionId';\n   unenrollment = this.URL + '/api/student/section/sectionId';\n  findSectionsForStudent() {\n    return fetch(this.Find, {\n      credentials: 'include'\n    })\n      .then(response => {\n        console.log('resoponse 52 ' + JSON.stringify(response));\n    if (response.status === 404 ) {\n      return response;\n    } else {\n        return response.json();\n    } });\n  }\n\n  enrollStudentInSection(sectionId) {\n    const url = this.URL + '/api/student/section/' + sectionId ;\n    return fetch(url, {\n      method: 'post',\n      credentials: 'include'\n    });\n  }\n  unenrollSection(enroll) {\n    const url = this.unenrollment.replace('sectionId', enroll.section._id )  ;\n    return fetch(url, {\n      method: 'delete',\n      body: JSON.stringify(enroll),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n    }});\n  }\n\n\n  findSectionsForCourse(courseId) {\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId))\n      .then(response => response.json());\n  }\n\n  createSection(courseId, name, seats) {\n    const section = {courseId, name, seats};\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId), {\n      method: 'post',\n      body: JSON.stringify(section),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n  updateSection(sectionId, sectionName, seats ) {\n    const section = {\n      id : sectionId,\n      name: sectionName,\n      seats: seats\n    }\n    console.log('update in section 4 insde ' + JSON.stringify(section));\n    return fetch(this.delete.replace('sectionId', sectionId),\n      {\n        method: 'put',\n        body: JSON.stringify(section),\n        credentials: 'include',\n        headers: {\n          'content-type': 'application/json'\n        }});\n  }\n\n  deleteSection(section) {\n    console.log('delete in section 4 insde ' + JSON.stringify(section));\n    return fetch(this.delete.replace('sectionId', section.id),\n    {\n      method: 'delete',\n      body: JSON.stringify(section),\n      credentials: 'include',\n      headers: {\n      'content-type': 'application/json'\n    }});\n  }\n\n}\n","export class TopicServiceClient {\n  // url = 'http://localhost:8080';\n  url = 'https://webdev-summerfull-2018.herokuapp.com';\n  findTopicsForLesson(courseId, moduleId, LessonId) {\n    return fetch(this.url + '/api/course/' + courseId + '/module/' + moduleId + '/lesson/' + LessonId + '/topic')\n      .then(response => response.json());\n  }\n}\n","// const Host = 'http://localhost:4000';\nconst Host = 'https://web-summer2018-nodejs-kenzhu.herokuapp.com' ;\nconst APIUSER = Host + '/api/user/';\nconst APILOGIN = Host + '/api/login' ;\nconst APILOGOUT = Host + '/api/profile' ;\nconst APIPROFILE =  Host + '/api/profile' ;\nimport {Router} from \"@angular/router\";\nconst router = Router;\nexport class UserServiceClient {\n\n  findUserById(userId) {\n    return fetch(APIUSER + userId)\n      .then(response => response.json());\n  }\n\n  login(username, password) {\n    const credentials = {\n      username: username,\n      password: password\n    };\n    return fetch(APILOGIN, {\n      method: 'post',\n      body: JSON.stringify(credentials),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n\n  logout() {\n    return fetch(APILOGOUT, {\n      method: 'delete',\n      credentials: 'include'\n    });\n  }\n\n  profile() {\n    return fetch(APIPROFILE,\n      {\n        credentials: 'include', // include, same-origin, *omit\n      })\n      .then(function(response) {\n        console.log('resoponse22 ' + response);\n         if (response.status === 404 ) {\n             return response;\n         } else {\n           console.log('resoponse ' + JSON.stringify(response));\n           return response.json();\n         }\n     }) ;\n  }\n\n  update(user) {\n    return fetch(APIPROFILE, {\n      body: JSON.stringify(user),\n      credentials: 'include', // include, same-origin, *omit\n      method: 'put',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json());\n  }\n\n  createUser(username, password) {\n    const user = {\n      username: username,\n      password: password\n    };\n    return fetch(APIUSER, {\n      body: JSON.stringify(user),\n      credentials: 'include', // include, same-origin, *omit\n      method: 'post',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n}\n","export class WidgetServiceClient {\n  // url = 'http://localhost:8080';\n  url = 'https://webdev-summerfull-2018.herokuapp.com';\n  findWidgetsForTopic(topicId) {\n    return fetch(this.url + '/api/topic/' + topicId + '/widget')\n      .then(response => response.json());\n  }\n}\n","module.exports = \".wbdv1.active {\\n  background-color: #f8f9fa;\\n  border-color: #f8f9fa;\\n}\\n\\n.wbdv1 a {\\n  color: black;\\n}\\n\\n.wbdv1.active a {\\n  color: white;\\n}\\n\"","module.exports = \"<div *ngIf=\\\" null !== topics \\\">\\n<ul class=\\\"nav nav-tabs\\\">\\n  <li *ngFor=\\\"let topic of topics\\\"\\n      class=\\\"nav-item wbdv1\\\">\\n\\n    <a class=\\\"nav-link\\\"\\n       [ngClass]=\\\"{'active': topic.id == topicId}\\\"\\n       routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lessonId}}/topic/{{topic.id}}\\\">\\n      {{topic.title}}\\n    </a>\\n  </li>\\n</ul>\\n\\n<app-widget-list></app-widget-list>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {TopicServiceClient} from '../services/topic.service.client';\n\n@Component({\n  selector: 'app-topic-list',\n  templateUrl: './topic-list.component.html',\n  styleUrls: ['./topic-list.component.css']\n})\nexport class TopicListComponent implements OnInit {\n\n\n  constructor(private service: TopicServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n    this.loadTopics(this.courseId, this.moduleId, this.lessonId);\n  }\n\n  courseId;\n  moduleId;\n  lessonId;\n  topicId;\n  topics = null;\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.lessonId = params['lessonId'];\n    this.topicId = params['topicId'];\n\n\n  }\n\n  loadTopics(courseId, moduleId, lessonId) {\n    this.courseId = courseId;\n    if ( lessonId !== undefined ) {\n    this.service.findTopicsForLesson(courseId, moduleId, lessonId)\n      .then(topics => {\n        this.topics = topics;\n  });\n    }\n  }\n\n  ngOnInit() {\n  }\n\n\n\n}\n","module.exports = \"\"","module.exports = \"\\n\\n\\n\\n\\n\\n\\n  <div class=\\\"container-fluid\\\">\\n      <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">White Board</a>\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\" aria-controls=\\\"navbarNavDropdown\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavDropdown\\\">\\n          <ul class=\\\"navbar-nav\\\">\\n            <li class=\\\"nav-item active\\\">\\n              <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a>\\n            </li>\\n            <li class=\\\"nav-item \\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">Profile</a>\\n\\n            </li>\\n          </ul>\\n        </div>\\n      </nav>\\n  </div>\\n\\n  <app-course-grid></app-course-grid>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-white-board',\n  templateUrl: './white-board.component.html',\n  styleUrls: ['./white-board.component.css']\n})\nexport class WhiteBoardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\" null !== widgets \\\" >\\n\\n  <div class=\\\"border p-4   rounded\\\">\\n  <div *ngFor=\\\"let widget of map\\\">\\n\\n  <div [ngSwitch]=\\\"widget.widgetType\\\">\\n\\n    <div *ngSwitchCase=\\\"'Heading'\\\">\\n      <div [ngSwitch]=\\\"widget.size\\\">\\n        <h1 *ngSwitchCase=\\\"'1'\\\">{{widget.text}}</h1>\\n        <h2 *ngSwitchCase=\\\"'2'\\\">{{widget.text}}</h2>\\n        <h3 *ngSwitchCase=\\\"'3'\\\">{{widget.text}}</h3>\\n\\n      </div>\\n    </div>\\n\\n\\n    <div *ngSwitchCase=\\\"'Paragraph'\\\">\\n\\n        <p>{{widget.text}}</p>\\n\\n    </div>\\n\\n\\n    <div class = \\\"p-4\\\" *ngSwitchCase=\\\"'Link'\\\">\\n      <a href=\\\"{{widget.href}}\\\">{{widget.text}}</a>\\n    </div>\\n\\n    <div class = \\\"p-4\\\" *ngSwitchCase=\\\"'List'\\\">\\n\\n      <div [ngSwitch]=\\\"widget.listType\\\">\\n        <div *ngSwitchCase=\\\"'unordered'\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li\\n            *ngFor=\\\"let item of widget.listItems.split('\\\\n')\\\">\\n          {{item}}\\n        </li>\\n      </ul>\\n        </div>\\n\\n        <div *ngSwitchCase=\\\"'ordered'\\\">\\n          <ol class=\\\"list-group\\\">\\n            <li\\n                *ngFor=\\\"let item of widget.listItems.split('\\\\n')\\\">\\n              {{item}}\\n            </li>\\n          </ol>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n\\n    <div *ngSwitchCase=\\\"'Image'\\\">\\n\\n      <p>{{widget.text}}</p>\\n      <img class = \\\"p-4\\\"\\n           src={{widget.src}}/>\\n\\n    </div>\\n\\n\\n  </div>\\n  </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {WidgetServiceClient} from \"../services/widget.service.client\";\n\n@Component({\n  selector: 'app-widget-list',\n  templateUrl: './widget-list.component.html',\n  styleUrls: ['./widget-list.component.css']\n})\nexport class WidgetListComponent implements OnInit {\n\n  constructor(private service: WidgetServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.setContext(params));\n  }\n\n  context;\n  widgets = null;\n  map = [];\n  setContext(params) {\n    this.context = params;\n    this.loadWidgets(params.topicId);\n  }\n  loadWidgets(TopicId) {\n    if ( TopicId !== undefined) {\n      this.service.findWidgetsForTopic(TopicId)\n        .then(widgets => {\n          this.mapWidget(widgets);\n        });\n    }\n  }\n\n  mapWidget(widgets) {\n    this.widgets = widgets;\n    console.log(' widget ' + JSON.stringify(widgets));\n    for (const widget of widgets) {\n      this.map[widget.orderList - 1] = widget;\n    }\n    console.log(' map ' + JSON.stringify(this.map));\n  }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}